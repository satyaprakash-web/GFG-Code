
class Solution{
public:
    string findLargest(int N, int S){
      if(S==0 && N==1) return "0";
      
      if(S> 9*N || (S == 0 && N>1)) return "-1";
      string res(N, '0');
      
     int i=0;
     while(S>0){
         if(S>=9){
             res[i] = '9';
             S = S-9;
         } else {
             res[i] = '0' + S;
             S =0;
          }
         i++;
       }
     return res;
    }
};



// Filling Digits from Left to Right:
// The code then enters a loop where it iteratively tries to fill the leftmost digits of the result string.
// Inside the loop, it checks if the remaining sum S is greater than or equal to 9. If it is, it sets the leftmost digit to '9' and subtracts 9 from S.
// If S is less than 9, it sets the leftmost digit to the character representing the remaining sum. For example, if S is 4, it sets the leftmost digit to '4' and sets S to 0.
// https://practice.geeksforgeeks.org/problems/largest-number-possible5028/1
